{"version":3,"sources":["collector-facts.js"],"names":["console","clear","scrollingElement","document","body","current","scrollHeight","last","autoScrollToBottom","getItem","log","sessionStorage","setItem","setTimeout","clearInterval","removeItem","autoScrollToTop","top","documentElement","scrollTop","scrollTo","window","requestAnimationFrame","getPageDetails","collection","selectors","content","selector","location","factText","item","index","classList","contains","source","factContainer","undefined","nextElementSibling","firstElementChild","substring","textContent","resetCollectionId","fact","array","save","data","key","error","executeScrapping","removeCollector","collector","querySelector","remove","blob","filename","hyperlink","type","download","simulatedClick","concat","MouseEvent","href","bubbles","cancelable","stringify","Blob","createEvent","URL","createObjectURL","active","downloadurl","join","view","dispatchEvent"],"mappings":"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","file":"collector-facts.min.js","sourcesContent":["// Clear console before logging new data\r\nconsole.clear();\r\n\r\n// Auto Scroll to Bottom of Page\r\nfunction autoScrollToBottom() {\r\n  let scrollingElement = document.scrollingElement || document.body;\r\n  let current = scrollingElement.scrollHeight;\r\n  let last = sessionStorage.getItem(\"last\");\r\n\r\n  if (current > 0 && current != last) {\r\n    console.log(\"Auto-scroll On\");\r\n    scrollingElement.scrollTop = scrollingElement.scrollHeight;\r\n    sessionStorage.setItem(\"last\", scrollingElement.scrollHeight);\r\n\r\n    setTimeout(() => {\r\n      autoScrollToBottom();\r\n    }, 1000);\r\n  }\r\n\r\n  if (current > 0 && current == last) {\r\n    clearInterval(autoScrollToBottom);\r\n    sessionStorage.removeItem(\"last\");\r\n    console.log(\"Auto-scroll Off\");\r\n\r\n    // Auto Scroll to Top of Page\r\n    autoScrollToTop();\r\n  }\r\n}\r\n\r\nfunction autoScrollToTop() {\r\n  let top = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n  if (top > 0) {\r\n    window.requestAnimationFrame(autoScrollToTop);\r\n    window.scrollTo(0, top - top / 120);\r\n  } else {\r\n    setTimeout(() => {\r\n      // Calling Scrapping Function\r\n      getPageDetails();\r\n    }, 3000);\r\n  }\r\n}\r\n\r\n// Facts.net Scraping\r\nfunction getPageDetails() {\r\n  const selectors = [\".olli-content\", \".single-title-desc-wrap\"];\r\n  const collection = [];\r\n\r\n  selectors.forEach((selector) => {\r\n    const content = document.querySelectorAll(selector);\r\n\r\n    content.forEach((item, index) => {\r\n      console.log(\"Scrapping On\");\r\n\r\n      let source = window.location.href;\r\n      let factContainer;\r\n      let factText;\r\n\r\n      if (item.classList.contains(\"olli-content\")) {\r\n        factContainer = item.nextElementSibling;\r\n        if (factContainer == undefined) {\r\n          factText = item.parentNode.textContent.substring(2);\r\n        } else {\r\n          factText = factContainer.textContent;\r\n        }\r\n      }\r\n\r\n      if (item.classList.contains(\"single-title-desc-wrap\")) {\r\n        factContainer = item.firstElementChild;\r\n        factText = factContainer.textContent;\r\n      }\r\n\r\n      let data = {\r\n        id: index,\r\n        source: source,\r\n        fact: factText,\r\n      };\r\n\r\n      collection.push(data);\r\n    });\r\n  });\r\n\r\n  console.log(\"Scrapping Off\");\r\n  resetCollectionId(collection, \"id\");\r\n  // console.log(\"Collection =>\", collection);\r\n}\r\n\r\n// Modified Reset Array id Based from https://stackoverflow.com/questions/12482961/change-values-in-array-when-doing-foreach\r\nfunction resetCollectionId(array, key) {\r\n  array.forEach((item, index) => {\r\n    item[key] = index;\r\n  });\r\n\r\n  console.save(array);\r\n  // console.log(\"Collection Reset =>\", array);\r\n}\r\n\r\n// Modified Save Console.log Based from https://github.com/edubey/browser-console-crawl/blob/master/single-story.js\r\nconsole.save = function (data, filename) {\r\n  if (!data) {\r\n    console.error(\"Console.save: No data\");\r\n    return;\r\n  } else {\r\n    console.log(\"Collection Downloaded\");\r\n  }\r\n\r\n  if (!filename) filename = `${window.location.href}_Collection.json`;\r\n\r\n  if (typeof data === \"object\") {\r\n    data = JSON.stringify(data, undefined, 4);\r\n  }\r\n\r\n  let blob = new Blob([data], {\r\n      type: \"text/json\",\r\n    }),\r\n    event = document.createEvent(\"MouseEvents\"),\r\n    hyperlink = document.createElement(\"a\");\r\n\r\n  hyperlink.download = filename;\r\n  hyperlink.href = window.URL.createObjectURL(blob);\r\n  hyperlink.dataset.downloadurl = [\r\n    \"text/json\",\r\n    hyperlink.download,\r\n    hyperlink.href,\r\n  ].join(\":\");\r\n\r\n  let simulatedClick = new MouseEvent(\"click\", {\r\n    view: window,\r\n    bubbles: true,\r\n    cancelable: true,\r\n  });\r\n\r\n  hyperlink.dispatchEvent(simulatedClick);\r\n\r\n  setTimeout(() => {\r\n    removeCollector();\r\n  }, 5000);\r\n};\r\n\r\nfunction executeScrapping() {\r\n  console.clear();\r\n  let active = \"Ninja Mode\";\r\n  autoScrollToBottom();\r\n  return active;\r\n}\r\n\r\nfunction removeCollector() {\r\n  let collector = document.querySelector(\"#fb-collect-sc\");\r\n\r\n  if (collector) {\r\n    collector.remove();\r\n    console.clear();\r\n  }\r\n}\r\n\r\nexecuteScrapping();\r\n"]}